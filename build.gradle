plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.springdoc.openapi-gradle-plugin" version "1.8.0"
	id 'groovy'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'com.mchange:c3p0:0.9.5.5'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.apache.groovy:groovy'
	implementation platform('org.apache.groovy:groovy-bom')

	if (project.hasProperty("production")) {
		implementation 'org.mariadb.jdbc:mariadb-java-client:2.2.0'
	} else {
		runtimeOnly 'com.h2database:h2'
	}

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation platform('org.spockframework:spock-bom:2.3-groovy-4.0')
	testImplementation 'org.spockframework:spock-core'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
	options.compilerArgs += [
			'-Alombok.accessors.chain=true',
			'-Alombok.accessors.fluent=true'
	]
}